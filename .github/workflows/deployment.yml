name: deployment
on:
  push:
    branches:
      - 'master'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code from repo
        uses: actions/checkout@v4
      - name: Install NodeJS # node is already available in ubuntu-latest. check github runners so can avoid this step if version matches
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci # install locked versions
      - name: Run tests
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code from repo
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Generate build
        run: npm run build
      - name: Publish JS file name
        id: publish
        run: find build/static/js/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
      - name: Ouput contents
        run: ls
      - name: Output file names
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "deploy"
      
      
      